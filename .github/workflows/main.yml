name: Build iOS App

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  APP_NAME: ShippingApp
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  build-ios:
    runs-on: macos-14

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # لا نعدّل PATH عبر shellenv حتى لا يطغى Python تبع Homebrew
      - name: 🔧 Homebrew info (no shellenv)
        shell: bash
        run: |
          /opt/homebrew/bin/brew --version || brew --version
          echo "pythonLocation=${pythonLocation}"
          which python3
          python3 --version

      - name: 📦 Install build tools
        shell: bash -l {0}
        run: |
          set -euxo pipefail
          brew update
          brew install autoconf automake libtool pkg-config ccache xz sqlite readline openssl@3 zlib || true

      - name: 🧰 Install Python deps for kivy-ios toolchain (host)
        shell: bash -l {0}
        run: |
          set -euxo pipefail
          "${pythonLocation}/bin/python" -m pip install --upgrade pip
          "${pythonLocation}/bin/python" -m pip install \
            "cython<3.0" sh packaging pbxproj cookiecutter Jinja2

      - name: 📦 Cache kivy-ios
        uses: actions/cache@v3
        with:
          path: ~/kivy-ios
          key: kivy-ios-${{ runner.os }}-macos14-v1

      - name: 🏗️ Fetch & build kivy-ios recipes
        shell: bash -l {0}
        run: |
          set -euxo pipefail
          cd ~
          if [ ! -d "kivy-ios" ]; then
            git clone https://github.com/kivy/kivy-ios
          fi
          cd kivy-ios
          "${pythonLocation}/bin/python" ./toolchain.py build python3 sdl2 sdl2_image sdl2_mixer sdl2_ttf pillow pyobjus kivy
          "${pythonLocation}/bin/python" ./toolchain.py pip install "cython<3.0" arabic-reshaper python-bidi

      - name: 🎯 Create Xcode project
        shell: bash -l {0}
        run: |
          set -euxo pipefail
          cd ~/kivy-ios
          # توليد مشروع Xcode من كودك
          "${pythonLocation}/bin/python" ./toolchain.py create "$APP_NAME" "${{ github.workspace }}"

          # احسب الـslug بنفس منطق القالب: أحرف صغيرة + أحرف/أرقام فقط
          APP_SLUG=$(echo "$APP_NAME" | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]')
          echo "APP_SLUG=$APP_SLUG" >> "$GITHUB_ENV"

          echo "Created project dir:"
          ls -la "${APP_SLUG}-ios"

          echo "Available schemes:"
          xcodebuild -list -project "${APP_SLUG}-ios/${APP_SLUG}.xcodeproj" || true

      - name: 🔨 Build app (Simulator, unsigned)
        shell: bash -l {0}
        run: |
          set -euxo pipefail
          cd ~/kivy-ios/"${APP_SLUG}-ios"

          # بناء باستخدام الـscheme والمجلد بالـslug الصغير
          xcodebuild \
            -project "${APP_SLUG}.xcodeproj" \
            -scheme "${APP_SLUG}" \
            -configuration Release \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            CODE_SIGNING_ALLOWED=NO \
            -derivedDataPath build

          echo "Build products:"
          find build -maxdepth 3 -type d -name "*.app" -print || true

      - name: 📤 Upload artifact (.app)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-iOS-simulator
          path: |
            ~/kivy-ios/${{ env.APP_SLUG }}-ios/build/Build/Products/Release-iphonesimulator/*.app
